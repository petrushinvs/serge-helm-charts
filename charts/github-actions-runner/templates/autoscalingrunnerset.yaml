{{- if .Capabilities.APIVersions.Has "actions.github.com/v1alpha1" }}
{{ $sidecar := semverCompare ">=1.29-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: actions.github.com/v1alpha1
kind: AutoscalingRunnerSet
metadata:
  name: {{ include "github-actions-runner.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "github-actions-runner.labels" . | nindent 4 }}
    app.kubernetes.io/component: autoscaling-runner-set
  annotations:
    actions.github.com/cleanup-github-secret-name: {{ include "github-actions-runner.fullname" . }}-github
    actions.github.com/cleanup-manager-role-binding: {{ include "github-actions-runner.managerRoleName" . }}
    actions.github.com/cleanup-manager-role-name: {{ include "github-actions-runner.managerRoleName" . }}
spec:
  githubConfigUrl: {{ required ".Values.githubConfigUrl is required" (trimSuffix "/" .Values.githubConfigUrl) }}
  githubConfigSecret: {{ include "github-actions-runner.fullname" . }}-github

  {{- with .Values.runnerGroup }}
  runnerGroup: {{ . }}
  {{- end }}
  {{- with .Values.runnerScaleSetName }}
  runnerScaleSetName: {{ . }}
  {{- end }}
  maxRunners: {{ default 2 .Values.autoscaling.maxReplicas | int }}
  minRunners: {{ default 0 .Values.autoscaling.minReplicas | int }}
  listenerTemplate:
    spec:
      containers:
        - name: listener
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
      {{- with .Values.listener.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.listener.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.listener.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: runner
      {{- if .Values.mirrors.enabled }}
        checksum/config: {{ toJson .Values.mirrors.registry | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "github-actions-runner.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: autoscaling-runner-set
    spec:
      enableServiceLinks: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.serviceAccount.create .Values.serviceAccount.name }}
      serviceAccountName: {{ include "github-actions-runner.serviceAccountName" . }}
      automountServiceAccountToken: true
      {{- else }}
      automountServiceAccountToken: false
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 5
      restartPolicy: Never
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      {{- if $sidecar }}
      initContainers:
      {{- else }}
      containers:
      {{- end }}
        {{- if .Values.dind.enabled }}
        - name: {{ .Chart.Name }}-dind
          {{- if $sidecar }}
          restartPolicy: Always
          {{- end }}
          securityContext:
            privileged: true
            seccompProfile:
              type: Unconfined
          image: "{{ .Values.dind.image.repository }}:{{ .Values.dind.image.tag }}"
          imagePullPolicy: {{ .Values.dind.image.pullPolicy }}
          command: ["dockerd"]
          args:
            - --config-file=/etc/docker-config/daemon.json
            - --group={{ default "0" .Values.securityContext.runAsGroup }}
          env:
            - name: DOCKER_HOST
              value: unix:///tmp/docker.sock
          volumeMounts:
            - name: config
              mountPath: /etc/docker-config
            - name: tls
              mountPath: /etc/docker-tls
            - name: docker
              mountPath: /var/lib/docker
            - name: run
              mountPath: /tmp
            - name: modules
              mountPath: /lib/modules
              readOnly: true
          {{- if .Values.dind.extraVolumeMounts }}
            {{- toYaml .Values.dind.extraVolumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.dind.resources | nindent 12 }}
        {{- end }}
      {{- if $sidecar }}
      containers:
      {{- end }}
        - name: runner
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /builds
          {{- if .Values.dind.enabled }}
          command: ["/bin/sh", "/etc/docker-config/mirrors.sh"]
          {{- else }}
          command: ["/home/runner/run.sh"]
          {{- end }}
          env:
            - name: ACTIONS_RUNNER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
              value: "false"
            - name: RUNNER_WORK_FOLDER
              value: /builds
            {{- if .Values.proxy.enabled }}
            - name: HTTP_PROXY
              value: "http://{{ include "github-actions-runner.fullname" . }}-proxy:3128"
            - name: NO_PROXY
              value: "cluster.local,{{ include "github-actions-runner.fullname" . }}-mirrors"
            {{- end }}
          envFrom:
            - secretRef:
                name: "{{ include "github-actions-runner.fullname" . }}"
          volumeMounts:
          {{- if .Values.dind.enabled }}
            - name: config
              mountPath: /etc/docker-config
            - name: tls
              mountPath: /etc/docker-tls
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
            - name: builds
              mountPath: /builds
            - name: run
              mountPath: /run
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- if .Values.podAntiAffinityPreset }}
        podAntiAffinity: {{- include "affinities.pods" . | nindent 10 }}
      {{- end }}
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: run
          emptyDir:
            medium: Memory
        - name: config
          configMap:
            name: {{ include "github-actions-runner.fullname" . }}
        - name: tls
          secret:
            secretName:  {{ include "github-actions-runner.fullname" . }}-client-tls
            defaultMode: 288
      {{- if .Values.dind.enabled }}
        - name: modules
          hostPath:
            path: /lib/modules
        - name: docker
        {{- if and .Values.dind.persistence.enabled .Values.dind.persistence.storageClass }}
          ephemeral:
            volumeClaimTemplate:
              metadata:
                {{- with .Values.dind.persistence.annotations }}
                annotations:
                  {{- toYaml . | nindent 18 }}
                {{- end }}
                labels:
                  {{- include "github-actions-runner.labels" . | nindent 18 }}
              {{- include "volumeClaimTemplate.spec.render" .Values.dind.persistence | nindent 14 }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- end }}
        - name: builds
        {{- if and .Values.persistence.enabled .Values.persistence.storageClass }}
          ephemeral:
            volumeClaimTemplate:
              metadata:
                {{- with .Values.persistence.annotations }}
                annotations:
                  {{- toYaml . | nindent 18 }}
                {{- end }}
                labels:
                  {{- include "github-actions-runner.labels" . | nindent 18 }}
              {{- include "volumeClaimTemplate.spec.render" .Values.persistence | nindent 14 }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if .Values.dind.extraVolumes }}
        {{- toYaml .Values.dind.extraVolumes | nindent 8 }}
      {{- end }}
{{- end }}
