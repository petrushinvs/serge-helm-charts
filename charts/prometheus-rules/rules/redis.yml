- name: redis-static.rules
  rules:
  - alert: RedisMultiMaster
    expr: count(redis_connected_slaves{role="master"}) by (kubernetes_namespace, project, name) > 1
    for: 1m
    labels:
      severity: critical
    annotations:
      description: Redis multi master detected, {{ $labels.kubernetes_namespace }}/project={{ $labels.project }}/{{ $labels.name }}
      summary: Redis cluster has more then one master
  - alert: RedisLostMaster
    expr: redis_master_link_up{role="slave"} != 1
    for: 1m
    labels:
      severity: warning
    annotations:
      description: Redis slave cannot connect to master, {{ $labels.kubernetes_namespace }}/project={{ $labels.project }}
      summary: Redis slave cannot connect to master
  - alert: RedisReplicationBroken
    expr: delta(redis_connected_slaves[5m]) < 0
    for: 5m
    labels:
      severity: warning
    annotations:
      description: Redis instance {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }} lost a slave
      summary: Replication broken lost a slave
  - alert: RedisClientConnections
    expr: redis_config_maxclients - redis_connected_clients < 10
    for: 1m
    labels:
      severity: warning
      source: application
    annotations:
      description: No more redis connections {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }}
      summary: Redis connection less then 10
  - alert: RejectedConnections
    expr: increase(redis_rejected_connections_total[2m]) > 0
    for: 5m
    labels:
      severity: warning
    annotations:
      description: Some connections to Redis {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }} has been rejected
      summary: Rejected connections
  - alert: RedisMemoryFull
    expr: (redis_memory_used_bytes > redis_memory_max_bytes * 0.9) and (redis_memory_max_bytes > 0)
    for: 5m
    labels:
      severity: warning
    annotations:
      description: Redis memory usage {{ $labels.kubernetes_namespace }} project={{ $labels.project
        }} {{ $labels.kubernetes_pod_name }} - {{ $value | humanize }}
      summary: Free redis memory less then 10%
  - alert: RedisMissingBackup
    expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24 * 7
    for: 5m
    labels:
      severity: warning
    annotations:
      description: Redis {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name
        }} has not been backuped more then 7 days ({{ $value | humanizeDuration }})
      summary: Missing backup

  - alert: RedisConnections
    expr: redis_connected_clients > redis_config_maxclients * 0.8
    for: 1m
    labels:
      severity: critical
    annotations:
      description: Redis connections {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }} limit almost reached
      summary: Redis connections limit
  # - alert: RedisError
  #   expr: increase(redis_errors_total{err="ERR"}[10m]) > 15
  #   for: 1m
  #   labels:
  #     severity: warning
  #   annotations:
  #     description: Redis has undefined error {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }} check the logs
  #     summary: Redis error
  - alert: RedisAuthError
    expr: increase(redis_errors_total{err="NOAUTH"}[10m]) > 5
    for: 1m
    labels:
      severity: warning
    annotations:
      description: Redis auth error {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }}
      summary: Redis auth error
  - alert: RedisLoadError
    expr: increase(redis_errors_total{err="LOADING"}[10m]) > 5
    for: 1m
    labels:
      severity: warning
    annotations:
      description: Redis load error {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }}
      summary: Redis load error
  - alert: RedisLoadError
    expr: increase(redis_errors_total{err="OOM"}[1m]) > 5
    for: 1m
    labels:
      severity: critical
    annotations:
      description: Redis out of memory issue {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }}
      summary: Redis out of memory error

  - alert: RedisLoadBalancer
    expr: haproxy_frontend_limit_sessions{app_kubernetes_io_name="keydb",proxy!="stats"} - haproxy_frontend_current_sessions < 10
    for: 1m
    labels:
      severity: critical
    annotations:
      description: Redis LoadBalancer {{ $labels.kubernetes_namespace }}/{{ $labels.app_kubernetes_io_instance
        }} limit reached
      summary: Redis LoadBalancer limit
  - alert: RedisLoadBalancer
    expr: haproxy_frontend_status{app_kubernetes_io_name="keydb",state="DOWN"} > 0
    for: 1m
    labels:
      severity: critical
    annotations:
      description: Redis LoadBalancer {{ $labels.kubernetes_namespace }}/{{ $labels.app_kubernetes_io_instance
        }} frontend down
      summary: Redis LoadBalancer down
