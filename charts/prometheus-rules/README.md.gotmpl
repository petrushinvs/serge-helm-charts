{{ template "chart.header" . }}

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

Helm chart containing Prometheus/VictoriaMetrics basic kubernetes rules.
It's stores as configMap and mounted to Prometheus/VictoriaMetrics pods.

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

Static configmap.

Base on projects:
* [kube-prometheus-stack](https://github.com/prometheus-community/helm-charts)
* [prometheus-operator](https://github.com/prometheus-operator/kube-prometheus/tree/main/manifests)
* https://github.com/roaldnefs/awesome-prometheus

### Prometheus setup

helm upgrade -i -n monitoring -f prometheus-rules.yaml prometheus-rules oci://ghcr.io/sergelogvinov/charts/prometheus-rules

```yaml
# prometheus-rules.yaml

prometheusConfig:
  enabled: true

  ruleFiles:
    - /etc/prometheus-rules/*.yml
```

helm upgrade -i -n monitoring -f prometheus.yaml prometheus prometheus-community/prometheus

```yaml
# prometheus.yaml

server:
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'

  configMapOverrideName: rules-config
  extraConfigmapMounts:
    - name: rules-configmap
      mountPath: /etc/prometheus-rules
      configMap: prometheus-rules
      readOnly: true
  extraSecretMounts:
    - name: scrape
      mountPath: /etc/secrets/scrape
      secretName: prometheus-rules-scrape
      readOnly: true

configmapReload:
  prometheus:
    extraVolumeDirs:
      - /etc/prometheus-rules
    extraConfigmapMounts:
      - name: rules-configmap
        mountPath: /etc/prometheus-rules
        configMap: prometheus-rules
        readOnly: true
```

### VictoriaMetrics setup

helm upgrade -i -n monitoring -f prometheus-rules.yaml prometheus-rules oci://ghcr.io/sergelogvinov/charts/prometheus-rules

```yaml
# prometheus-rules.yaml

victoriaMetricsConfig:
  enabled: true

  ruleFiles:
    - /etc/prometheus-rules/*.yml
```

kubectl apply -f vm.yaml

```yaml
# vm.yaml
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAlert
spec:
  podMetadata:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '8080'
  configMaps:
    - prometheus-rules
  rulePath:
    - /etc/vm/configs/prometheus-rules/*.yml
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAgent
spec:
  podMetadata:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '8429'
  additionalScrapeConfigs:
    name: prometheus-rules-scrape
    key: scrape.yml
```

{{ template "chart.valuesSection" . }}
