apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bitwarden.fullname" . }}
  labels:
    {{- include "bitwarden.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "bitwarden.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.config }}
        checksum/config: {{ toJson .Values.config | sha256sum }}
        checksum/envs: {{ toJson .Values.envs | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bitwarden.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "bitwarden.serviceAccountName" . }}
      {{- else }}
      automountServiceAccountToken: false
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/vaultwarden"]
          env:
            - name: ROCKET_ENV
              value: production
            - name: ROCKET_PORT
              value: "8080"
            - name: DOMAIN
              value: "https://{{ (index .Values.ingress.hosts 0).host }}"
            - name: CONFIG_FILE
              value: "/etc/bitwarden/config.json"
          envFrom:
            - secretRef:
                name: {{ include "bitwarden.fullname" . }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/bitwarden
            - name: data
              mountPath: /data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "bitwarden.fullname" . }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "data-%s" (include "bitwarden.fullname" . )) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
