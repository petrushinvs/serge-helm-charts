# Default values for backend-common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - name: service
          path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1100
  runAsGroup: 1100
  fsGroup: 1100
  fsGroupChangePolicy: "OnRootMismatch"

securityContext:
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop: ["ALL"]

priorityClassName: ~

secretsMountPath: /etc/secrets
secrets: {}
  # POSTGRES_PASSWORD: "123"
  # MONGO_PASSWORD: "123"
  # CLICKHOUSE_PASSWORD: "123"

configMountPath: /etc/settings
configConfigMap: ~
config: ~
  # config.py: |
  #   # python config file

env: []
  # - name: PUBLIC_API_URL
  #   value: "https://example.com/api"

envSecrets: {}
  # POSTGRES_PASSWORD: "123"
  # MONGO_PASSWORD: "123"
  # CLICKHOUSE_PASSWORD: "123"

services: {}
workers: {}
cronjobs: {}
jobs: {}

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 256Mi

startupProbe:
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 10
  failureThreshold: 8

livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 60
  timeoutSeconds: 10
  failureThreshold: 5

readinessProbe:
  initialDelaySeconds: 120
  periodSeconds: 60
  timeoutSeconds: 10
  failureThreshold: 5

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

nodeAffinityPreset: {}
  # type: hard
  # key: kubernetes.io/role
  # values: ["web","worker"]
podAffinityPreset: {}
  # type: hard
  # topologyKey: kubernetes.io/hostname
  # labels:
  #   app: name
podAntiAffinityPreset: soft
